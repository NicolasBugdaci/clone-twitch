{"ast":null,"code":"var _jsxFileName = \"/Users/nicolasbugdaci/React/Udemy React/Twitch Clone Project/twitch-clone-react/src/Components/Sidebard/Sidebar.jsx\";\nimport React, { useEffect, useState } from \"react\";\nimport api from \"../../api\";\nimport { Link } from \"react-router-dom\";\n\nfunction Sidebar() {\n  const [topStreams, setTopStreams] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await api.get(\"https://api.twitch.tv/helix/streams\");\n      let dataArray = result.data.data; // console.log(dataArray);\n\n      let gameIDs = dataArray.map(stream => {\n        return stream.game_id;\n      });\n      let userIDs = dataArray.map(stream => {\n        return stream.user_id;\n      }); // console.log(gameIDs, userIDs);\n      // Création des URLs personnalisés\n\n      let baseUrlGames = \"https://api.twitch.tv/helix/games?\";\n      let baseUrlUsers = \"https://api.twitch.tv/helix/users?\";\n      let queryParamsGame = \"\";\n      let queryParamsUsers = \"\";\n      gameIDs.map(id => {\n        return queryParamsGame = queryParamsGame + `id=${id}&`;\n      });\n      userIDs.map(id => {\n        return queryParamsUsers = queryParamsUsers + `id=${id}&`;\n      }); // url final\n\n      let urlFinalGames = baseUrlGames + queryParamsGame;\n      let urlFinalUsers = baseUrlUsers + queryParamsUsers; // console.log(urlFinalGames);\n      // appel\n\n      let gamesNames = await api.get(urlFinalGames);\n      let getUsers = await api.get(urlFinalUsers);\n      let gamesNameArray = gamesNames.data.data;\n      let arrayUsers = getUsers.data.data; // console.log(arrayUsers, gamesNameArray);\n      // création du tableau final\n\n      let finalArray = dataArray.map(stream => {\n        stream.gameName = \"\";\n        stream.truePic = \"\";\n        stream.login = \"\";\n        gamesNameArray.forEach(name => {\n          arrayUsers.forEach(user => {\n            if (stream.user_id === user.id && stream.game_id === name.id) {\n              stream.truePic = user.profile_image_url;\n              stream.gameName = name.name;\n              stream.login = user.login;\n            }\n          });\n        });\n        return stream;\n      });\n      setTopStreams(finalArray.slice(0, 6));\n    };\n\n    fetchData();\n  }, []);\n  console.log(topStreams);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sidebar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"titreSidebar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, \"Cha\\xEEnes recommand\\xE9es\"), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"listeStream\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }, topStreams.map((stream, index) => /*#__PURE__*/React.createElement(Link, {\n    key: index,\n    className: \"lien\",\n    to: {\n      pathname: `/live/${stream.login}`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    key: index,\n    className: \"containerFlexSidebar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: stream.truePic,\n    alt: \"logo user\",\n    className: \"profilePicRonde\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"streamUser\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 15\n    }\n  }, stream.user_name), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"viewerRight\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pointRouge\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 17\n    }\n  }, stream.viewer_count)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"gameNameSidebar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 15\n    }\n  }, stream.gameName))))));\n}\n\nexport default Sidebar;","map":{"version":3,"sources":["/Users/nicolasbugdaci/React/Udemy React/Twitch Clone Project/twitch-clone-react/src/Components/Sidebard/Sidebar.jsx"],"names":["React","useEffect","useState","api","Link","Sidebar","topStreams","setTopStreams","fetchData","result","get","dataArray","data","gameIDs","map","stream","game_id","userIDs","user_id","baseUrlGames","baseUrlUsers","queryParamsGame","queryParamsUsers","id","urlFinalGames","urlFinalUsers","gamesNames","getUsers","gamesNameArray","arrayUsers","finalArray","gameName","truePic","login","forEach","name","user","profile_image_url","slice","console","log","index","pathname","user_name","viewer_count"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport api from \"../../api\";\nimport { Link } from \"react-router-dom\";\n\nfunction Sidebar() {\n  const [topStreams, setTopStreams] = useState([]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await api.get(\"https://api.twitch.tv/helix/streams\");\n\n      let dataArray = result.data.data;\n      // console.log(dataArray);\n\n      let gameIDs = dataArray.map(stream => {\n        return stream.game_id;\n      });\n      let userIDs = dataArray.map(stream => {\n        return stream.user_id;\n      });\n      // console.log(gameIDs, userIDs);\n\n      // Création des URLs personnalisés\n\n      let baseUrlGames = \"https://api.twitch.tv/helix/games?\";\n      let baseUrlUsers = \"https://api.twitch.tv/helix/users?\";\n\n      let queryParamsGame = \"\";\n      let queryParamsUsers = \"\";\n\n      gameIDs.map(id => {\n        return (queryParamsGame = queryParamsGame + `id=${id}&`);\n      });\n      userIDs.map(id => {\n        return (queryParamsUsers = queryParamsUsers + `id=${id}&`);\n      });\n\n      // url final\n      let urlFinalGames = baseUrlGames + queryParamsGame;\n      let urlFinalUsers = baseUrlUsers + queryParamsUsers;\n      // console.log(urlFinalGames);\n\n      // appel\n      let gamesNames = await api.get(urlFinalGames);\n      let getUsers = await api.get(urlFinalUsers);\n\n      let gamesNameArray = gamesNames.data.data;\n      let arrayUsers = getUsers.data.data;\n      // console.log(arrayUsers, gamesNameArray);\n\n      // création du tableau final\n      let finalArray = dataArray.map(stream => {\n        stream.gameName = \"\";\n        stream.truePic = \"\";\n        stream.login = \"\";\n\n        gamesNameArray.forEach(name => {\n          arrayUsers.forEach(user => {\n            if (stream.user_id === user.id && stream.game_id === name.id) {\n              stream.truePic = user.profile_image_url;\n              stream.gameName = name.name;\n              stream.login = user.login;\n            }\n          });\n        });\n\n        return stream;\n      });\n\n      setTopStreams(finalArray.slice(0, 6));\n    };\n\n    fetchData();\n  }, []);\n\n  console.log(topStreams);\n\n  return (\n    <div className=\"sidebar\">\n      <h2 className=\"titreSidebar\">Chaînes recommandées</h2>\n      <ul className=\"listeStream\">\n        {topStreams.map((stream, index) => (\n          <Link\n            key={index}\n            className=\"lien\"\n            to={{\n              pathname: `/live/${stream.login}`\n            }}\n          >\n            <li key={index} className=\"containerFlexSidebar\">\n              <img\n                src={stream.truePic}\n                alt=\"logo user\"\n                className=\"profilePicRonde\"\n              />\n\n              <div className=\"streamUser\">{stream.user_name}</div>\n\n              <div className=\"viewerRight\">\n                <div className=\"pointRouge\"></div>\n                <div>{stream.viewer_count}</div>\n              </div>\n\n              <div className=\"gameNameSidebar\">{stream.gameName}</div>\n            </li>\n          </Link>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default Sidebar;\n"]},"metadata":{},"sourceType":"module"}