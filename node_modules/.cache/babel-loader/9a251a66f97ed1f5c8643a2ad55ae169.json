{"ast":null,"code":"var _jsxFileName = \"/Users/nicolasbugdaci/React/Udemy React/Twitch Clone Project/twitch-clone-react/src/Components/Live/Live.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport ReactTwitchEmbedVideo from \"react-twitch-embed-video\";\nimport { useParams } from \"react-router-dom\";\nimport api from \"../../api\";\n\nfunction Live() {\n  let {\n    slug\n  } = useParams();\n  console.log(slug);\n  const [infoStream, setInfoStream] = useState([]);\n  const [infoGame, setInfoGame] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await api.get(`https://api.twitch.tv/helix/streams?user_login=${slug}`);\n\n      if (result.data.data.length === 0) {\n        setInfoStream(false);\n      } else {\n        let gameID = result.data.data.map(gameid => {\n          return gameid.game_id;\n        });\n        const resultNomGame = await api.get(`https://api.twitch.tv/helix/games?id=${gameID}`);\n        let nomJeu = resultNomGame.data.data.map(gameName => {\n          return gameName.name;\n        });\n        setInfoGame(nomJeu);\n        setInfoStream(result.data.data[0]);\n      }\n    };\n\n    fetchData();\n  }, [slug]);\n  return infoStream ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"containerDecale\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ReactTwitchEmbedVideo, {\n    height: \"754\",\n    width: \"100%\",\n    channel: slug,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"contInfo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"titreStream\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, infoStream.title), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"viewer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, \"Viewers : \", infoStream.viewer_count), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"infogame\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, \"Streamer : \", infoStream.user_name, \", \\xA0 Langue :\", \" \", infoStream.language), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"nomJeu\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, \"Jeu : \", infoGame))) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"containerDecale\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ReactTwitchEmbedVideo, {\n    height: \"754\",\n    width: \"100%\",\n    channel: slug,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"contInfo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"titreStream\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, \"Le Streamer est offline ! \")));\n}\n\nexport default Live;","map":{"version":3,"sources":["/Users/nicolasbugdaci/React/Udemy React/Twitch Clone Project/twitch-clone-react/src/Components/Live/Live.jsx"],"names":["React","useState","useEffect","ReactTwitchEmbedVideo","useParams","api","Live","slug","console","log","infoStream","setInfoStream","infoGame","setInfoGame","fetchData","result","get","data","length","gameID","map","gameid","game_id","resultNomGame","nomJeu","gameName","name","title","viewer_count","user_name","language"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport ReactTwitchEmbedVideo from \"react-twitch-embed-video\";\nimport { useParams } from \"react-router-dom\";\nimport api from \"../../api\";\n\nfunction Live() {\n  let { slug } = useParams();\n  console.log(slug);\n\n  const [infoStream, setInfoStream] = useState([]);\n  const [infoGame, setInfoGame] = useState([]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await api.get(\n        `https://api.twitch.tv/helix/streams?user_login=${slug}`\n      );\n\n      if (result.data.data.length === 0) {\n        setInfoStream(false);\n      } else {\n        let gameID = result.data.data.map(gameid => {\n          return gameid.game_id;\n        });\n\n        const resultNomGame = await api.get(\n          `https://api.twitch.tv/helix/games?id=${gameID}`\n        );\n\n        let nomJeu = resultNomGame.data.data.map(gameName => {\n          return gameName.name;\n        });\n\n        setInfoGame(nomJeu);\n        setInfoStream(result.data.data[0]);\n      }\n    };\n\n    fetchData();\n  }, [slug]);\n\n  return infoStream ? (\n    <div className=\"containerDecale\">\n      <ReactTwitchEmbedVideo height=\"754\" width=\"100%\" channel={slug} />\n      <div className=\"contInfo\">\n        <div className=\"titreStream\">{infoStream.title}</div>\n        <div className=\"viewer\">Viewers : {infoStream.viewer_count}</div>\n        <div className=\"infogame\">\n          Streamer : {infoStream.user_name}, &nbsp; Langue :{\" \"}\n          {infoStream.language}\n        </div>\n        <div className=\"nomJeu\">Jeu : {infoGame}</div>\n      </div>\n    </div>\n  ) : (\n    <div className=\"containerDecale\">\n      <ReactTwitchEmbedVideo height=\"754\" width=\"100%\" channel={slug} />\n      <div className=\"contInfo\">\n        <div className=\"titreStream\">Le Streamer est offline ! </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Live;\n"]},"metadata":{},"sourceType":"module"}