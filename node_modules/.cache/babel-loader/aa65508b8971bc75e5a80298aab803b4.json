{"ast":null,"code":"var _jsxFileName = \"/Users/nicolasbugdaci/Websites Local/twitch-clone-react/src/Components/GameStreams/GameStreams.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport { useLocation, useParams } from \"react-router-dom\";\nimport api from \"../../api\";\nimport { Link } from \"react-router-dom\";\n\nfunction GameStreams() {\n  let {\n    slug\n  } = useParams();\n  let location = useLocation();\n  console.log(location);\n  const [streamData, setStreamData] = useState([]);\n  const [viewers, setViewers] = useState(0);\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await api.get(`https://api.twitch.tv/helix/streams?game_id=${location.state.gameID}`);\n      let dataArray = result.data.data;\n      let finalArray = dataArray.map(stream => {\n        let newURL = stream.thumbnail_url.replace(\"{width}\", \"320\").replace(\"{height}\", \"180\");\n        stream.thumbnail_url = newURL;\n        return stream;\n      }); // calcul du total des viewers\n\n      let totalViewers = finalArray.reduce((acc, val) => {\n        return acc + val.viewer_count;\n      }, 0);\n      let userIDs = dataArray.map(stream => {\n        return stream.user_id;\n      });\n      let baseUrl = \"https://api.twitch.tv/helix/users?\";\n      let queryParamsUsers = \"\";\n      userIDs.map(id => {\n        return queryParamsUsers = queryParamsUsers + `id=${id}&`;\n      });\n      let finalUrl = baseUrl + queryParamsUsers;\n      let getUsersLogin = await api.get(finalUrl);\n      let userLoginArray = getUsersLogin.data.data;\n      finalArray = dataArray.map(stream => {\n        stream.login = \"\";\n        userLoginArray.forEach(login => {\n          if (stream.user_id === login.id) {\n            stream.login = login.login;\n          }\n        });\n        return stream;\n      });\n      setViewers(totalViewers);\n      setStreamData(finalArray);\n    };\n\n    fetchData();\n  }, [location.state.gameID]);\n  console.log(viewers);\n  console.log(streamData);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"titreGamesStreams\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }, \"Streams : \", slug), /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"sousTitreGameStreams\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    className: \"textColored\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, viewers), \" personnes regardent\", \" \", slug), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flexAccueil\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, streamData.map((stream, index) => /*#__PURE__*/React.createElement(\"div\", {\n    key: index,\n    className: \"carteGameStreams\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: stream.thumbnail_url,\n    alt: \"jeu carte img\",\n    className: \"imgCarte\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cardBodyGameStreams\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"titreCartesStream\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 15\n    }\n  }, stream.user_name), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"txtStream\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 15\n    }\n  }, \"Nombre de viewers : \", stream.viewer_count), /*#__PURE__*/React.createElement(Link, {\n    className: \"lien\",\n    to: {\n      pathname: `/live/${stream.login}`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"btnCarte\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 17\n    }\n  }, \"Regarder \", stream.user_name)))))));\n}\n\nexport default GameStreams;","map":{"version":3,"sources":["/Users/nicolasbugdaci/Websites Local/twitch-clone-react/src/Components/GameStreams/GameStreams.jsx"],"names":["React","useState","useEffect","useLocation","useParams","api","Link","GameStreams","slug","location","console","log","streamData","setStreamData","viewers","setViewers","fetchData","result","get","state","gameID","dataArray","data","finalArray","map","stream","newURL","thumbnail_url","replace","totalViewers","reduce","acc","val","viewer_count","userIDs","user_id","baseUrl","queryParamsUsers","id","finalUrl","getUsersLogin","userLoginArray","login","forEach","index","user_name","pathname"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useLocation, useParams } from \"react-router-dom\";\nimport api from \"../../api\";\nimport { Link } from \"react-router-dom\";\n\nfunction GameStreams() {\n  let { slug } = useParams();\n  let location = useLocation();\n  console.log(location);\n\n  const [streamData, setStreamData] = useState([]);\n  const [viewers, setViewers] = useState(0);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await api.get(\n        `https://api.twitch.tv/helix/streams?game_id=${location.state.gameID}`\n      );\n      let dataArray = result.data.data;\n\n      let finalArray = dataArray.map(stream => {\n        let newURL = stream.thumbnail_url\n          .replace(\"{width}\", \"320\")\n          .replace(\"{height}\", \"180\");\n        stream.thumbnail_url = newURL;\n        return stream;\n      });\n\n      // calcul du total des viewers\n      let totalViewers = finalArray.reduce((acc, val) => {\n        return acc + val.viewer_count;\n      }, 0);\n\n      let userIDs = dataArray.map(stream => {\n        return stream.user_id;\n      });\n\n      let baseUrl = \"https://api.twitch.tv/helix/users?\";\n      let queryParamsUsers = \"\";\n\n      userIDs.map(id => {\n        return (queryParamsUsers = queryParamsUsers + `id=${id}&`);\n      });\n      let finalUrl = baseUrl + queryParamsUsers;\n\n      let getUsersLogin = await api.get(finalUrl);\n\n      let userLoginArray = getUsersLogin.data.data;\n\n      finalArray = dataArray.map(stream => {\n        stream.login = \"\";\n\n        userLoginArray.forEach(login => {\n          if (stream.user_id === login.id) {\n            stream.login = login.login;\n          }\n        });\n\n        return stream;\n      });\n\n      setViewers(totalViewers);\n      setStreamData(finalArray);\n    };\n\n    fetchData();\n  }, [location.state.gameID]);\n\n  console.log(viewers);\n  console.log(streamData);\n\n  return (\n    <div>\n      <h1 className=\"titreGamesStreams\">Streams : {slug}</h1>\n      <h3 className=\"sousTitreGameStreams\">\n        <strong className=\"textColored\">{viewers}</strong> personnes regardent{\" \"}\n        {slug}\n      </h3>\n\n      <div className=\"flexAccueil\">\n        {streamData.map((stream, index) => (\n          <div key={index} className=\"carteGameStreams\">\n            <img\n              src={stream.thumbnail_url}\n              alt=\"jeu carte img\"\n              className=\"imgCarte\"\n            />\n\n            <div className=\"cardBodyGameStreams\">\n              <h5 className=\"titreCartesStream\">{stream.user_name}</h5>\n              <p className=\"txtStream\">\n                Nombre de viewers : {stream.viewer_count}\n              </p>\n\n              <Link\n                className=\"lien\"\n                to={{\n                  pathname: `/live/${stream.login}`\n                }}\n              >\n                <div className=\"btnCarte\">Regarder {stream.user_name}</div>\n              </Link>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default GameStreams;\n"]},"metadata":{},"sourceType":"module"}