{"ast":null,"code":"var _jsxFileName = \"/Users/nicolasbugdaci/React/Udemy React/Twitch Clone Project/twitch-clone-react/src/Components/Resultats/Resultats.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport api from \"../../api\";\nimport { Link, useParams } from \"react-router-dom\";\nimport Erreur from \"../Erreur/Erreur\";\n\nfunction Resultats() {\n  let {\n    slug\n  } = useParams();\n  const [result, setResult] = useState(true);\n  const [streamerInfo, setStreamerInfo] = useState([]);\n  let cleanSearch = slug.replace(/ /g, \"\");\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await api.get(`https://api.twitch.tv/helix/users?login=${cleanSearch}`);\n      console.log(result);\n\n      if (result.data.data.length === 0) {\n        setResult(false);\n      } else {\n        setStreamerInfo(result.data.data);\n      }\n    };\n\n    fetchData();\n  }, [cleanSearch]);\n  return result ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"containerDecaleResultats\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, \"R\\xE9sultats de recherche : \"), streamerInfo.map((stream, index) => /*#__PURE__*/React.createElement(\"div\", {\n    key: index,\n    className: \"carteResultats\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: stream.profile_image_url,\n    alt: \"resultat profile\",\n    className: \"imgCarte\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cardBodyResults\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"titreCartesStream\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 15\n    }\n  }, stream.display_name), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"txtResult\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 15\n    }\n  }, stream.description), /*#__PURE__*/React.createElement(Link, {\n    className: \"lien\",\n    to: {\n      pathname: `/live/${stream.login}`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"btnCarte btnResult\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }, \"Regarder \", stream.display_name))))))) : /*#__PURE__*/React.createElement(Erreur, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }\n  });\n}\n\nexport default Resultats;","map":{"version":3,"sources":["/Users/nicolasbugdaci/React/Udemy React/Twitch Clone Project/twitch-clone-react/src/Components/Resultats/Resultats.jsx"],"names":["React","useState","useEffect","api","Link","useParams","Erreur","Resultats","slug","result","setResult","streamerInfo","setStreamerInfo","cleanSearch","replace","fetchData","get","console","log","data","length","map","stream","index","profile_image_url","display_name","description","pathname","login"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,GAAP,MAAgB,WAAhB;AACA,SAASC,IAAT,EAAeC,SAAf,QAAgC,kBAAhC;AACA,OAAOC,MAAP,MAAmB,kBAAnB;;AAEA,SAASC,SAAT,GAAqB;AACnB,MAAI;AAAEC,IAAAA;AAAF,MAAWH,SAAS,EAAxB;AAEA,QAAM,CAACI,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,IAAD,CAApC;AACA,QAAM,CAACU,YAAD,EAAeC,eAAf,IAAkCX,QAAQ,CAAC,EAAD,CAAhD;AAEA,MAAIY,WAAW,GAAGL,IAAI,CAACM,OAAL,CAAa,IAAb,EAAmB,EAAnB,CAAlB;AAEAZ,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMa,SAAS,GAAG,YAAY;AAC5B,YAAMN,MAAM,GAAG,MAAMN,GAAG,CAACa,GAAJ,CAClB,2CAA0CH,WAAY,EADpC,CAArB;AAGAI,MAAAA,OAAO,CAACC,GAAR,CAAYT,MAAZ;;AAEA,UAAIA,MAAM,CAACU,IAAP,CAAYA,IAAZ,CAAiBC,MAAjB,KAA4B,CAAhC,EAAmC;AACjCV,QAAAA,SAAS,CAAC,KAAD,CAAT;AACD,OAFD,MAEO;AACLE,QAAAA,eAAe,CAACH,MAAM,CAACU,IAAP,CAAYA,IAAb,CAAf;AACD;AACF,KAXD;;AAYAJ,IAAAA,SAAS;AACV,GAdQ,EAcN,CAACF,WAAD,CAdM,CAAT;AAgBA,SAAOJ,MAAM,gBACX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCADF,EAGGE,YAAY,CAACU,GAAb,CAAiB,CAACC,MAAD,EAASC,KAAT,kBAChB;AAAK,IAAA,GAAG,EAAEA,KAAV;AAAiB,IAAA,SAAS,EAAC,gBAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,GAAG,EAAED,MAAM,CAACE,iBADd;AAEE,IAAA,GAAG,EAAC,kBAFN;AAGE,IAAA,SAAS,EAAC,UAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAOE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,SAAS,EAAC,mBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmCF,MAAM,CAACG,YAA1C,CADF,eAEE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA4BH,MAAM,CAACI,WAAnC,CAFF,eAIE,oBAAC,IAAD;AACE,IAAA,SAAS,EAAC,MADZ;AAEE,IAAA,EAAE,EAAE;AACFC,MAAAA,QAAQ,EAAG,SAAQL,MAAM,CAACM,KAAM;AAD9B,KAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAME;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACYN,MAAM,CAACG,YADnB,CANF,CAJF,CAPF,CADD,CAHH,CADF,CADW,gBAiCX,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjCF;AAmCD;;AAED,eAAelB,SAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport api from \"../../api\";\nimport { Link, useParams } from \"react-router-dom\";\nimport Erreur from \"../Erreur/Erreur\";\n\nfunction Resultats() {\n  let { slug } = useParams();\n\n  const [result, setResult] = useState(true);\n  const [streamerInfo, setStreamerInfo] = useState([]);\n\n  let cleanSearch = slug.replace(/ /g, \"\");\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await api.get(\n        `https://api.twitch.tv/helix/users?login=${cleanSearch}`\n      );\n      console.log(result);\n\n      if (result.data.data.length === 0) {\n        setResult(false);\n      } else {\n        setStreamerInfo(result.data.data);\n      }\n    };\n    fetchData();\n  }, [cleanSearch]);\n\n  return result ? (\n    <div>\n      <div className=\"containerDecaleResultats\">\n        <h4>RÃ©sultats de recherche : </h4>\n\n        {streamerInfo.map((stream, index) => (\n          <div key={index} className=\"carteResultats\">\n            <img\n              src={stream.profile_image_url}\n              alt=\"resultat profile\"\n              className=\"imgCarte\"\n            />\n\n            <div className=\"cardBodyResults\">\n              <h5 className=\"titreCartesStream\">{stream.display_name}</h5>\n              <div className=\"txtResult\">{stream.description}</div>\n\n              <Link\n                className=\"lien\"\n                to={{\n                  pathname: `/live/${stream.login}`\n                }}\n              >\n                <div className=\"btnCarte btnResult\">\n                  Regarder {stream.display_name}\n                </div>\n              </Link>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  ) : (\n    <Erreur />\n  );\n}\n\nexport default Resultats;\n"]},"metadata":{},"sourceType":"module"}