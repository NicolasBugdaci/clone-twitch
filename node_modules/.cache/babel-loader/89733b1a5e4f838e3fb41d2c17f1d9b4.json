{"ast":null,"code":"var _jsxFileName = \"/Users/nicolasbugdaci/React/Udemy React/Twitch Clone Project/twitch-clone-react/src/Components/TopStreams/TopStreams.jsx\";\nimport React, { useEffect, useState } from \"react\";\nimport api from \"../../api\";\n\nfunction TopStream() {\n  const [channels, setChannels] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await api.get(\"https://api.twitch.tv/helix/streams\");\n      let dataArray = result.data.data;\n      let gameIDs = dataArray.map(stream => {\n        return stream.game_id;\n      });\n      let userIDs = dataArray.map(stream => {\n        return stream.user_id;\n      }); // Création des URLs personnalisés\n\n      let baseUrlGames = \"https://api.twitch.tv/helix/games?\";\n      let baseUrlUsers = \"https://api.twitch.tv/helix/users?\";\n      let queryParamsGame = \"\";\n      let queryParamsUsers = \"\";\n      gameIDs.map(id => {\n        return queryParamsGame = queryParamsGame + `id=${id}&`;\n      });\n      userIDs.map(id => {\n        return queryParamsUsers = queryParamsUsers + `id=${id}&`;\n      }); // url final\n\n      let urlFinalGames = baseUrlGames + queryParamsGame;\n      let urlFinalUsers = baseUrlUsers + queryParamsUsers; // console.log(urlFinalGames);\n      // appel\n\n      let gamesNames = await api.get(urlFinalGames);\n      let getUsers = await api.get(urlFinalUsers);\n      let gamesNameArray = gamesNames.data.data;\n      let arrayUsers = getUsers.data.data; // console.log(arrayUsers, gamesNameArray);\n      // création du tableau final\n\n      let finalArray = dataArray.map(stream => {\n        stream.gameName = \"\";\n        stream.login = \"\";\n        gamesNameArray.forEach(name => {\n          arrayUsers.forEach(user => {\n            if (stream.user_id === user.id && stream.game_id === name.id) {\n              stream.truePic = user.profile_image_url;\n              stream.gameName = name.name;\n              stream.login = user.login;\n            }\n          });\n        });\n        let newUrl = stream.thumbnail_url.replace(\"{width}\", \"320\").replace(\"{height}\", \"180\");\n        return stream;\n      });\n      setChannels(finalArray.slice(0, 6));\n    };\n\n    fetchData();\n  }, []);\n  return /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 10\n    }\n  }, \"Je suis top stream\");\n}\n\nexport default TopStream;","map":{"version":3,"sources":["/Users/nicolasbugdaci/React/Udemy React/Twitch Clone Project/twitch-clone-react/src/Components/TopStreams/TopStreams.jsx"],"names":["React","useEffect","useState","api","TopStream","channels","setChannels","fetchData","result","get","dataArray","data","gameIDs","map","stream","game_id","userIDs","user_id","baseUrlGames","baseUrlUsers","queryParamsGame","queryParamsUsers","id","urlFinalGames","urlFinalUsers","gamesNames","getUsers","gamesNameArray","arrayUsers","finalArray","gameName","login","forEach","name","user","truePic","profile_image_url","newUrl","thumbnail_url","replace","slice"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport api from \"../../api\";\n\nfunction TopStream() {\n  const [channels, setChannels] = useState([]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await api.get(\"https://api.twitch.tv/helix/streams\");\n\n      let dataArray = result.data.data;\n\n      let gameIDs = dataArray.map(stream => {\n        return stream.game_id;\n      });\n      let userIDs = dataArray.map(stream => {\n        return stream.user_id;\n      });\n\n      // Création des URLs personnalisés\n\n      let baseUrlGames = \"https://api.twitch.tv/helix/games?\";\n      let baseUrlUsers = \"https://api.twitch.tv/helix/users?\";\n\n      let queryParamsGame = \"\";\n      let queryParamsUsers = \"\";\n\n      gameIDs.map(id => {\n        return (queryParamsGame = queryParamsGame + `id=${id}&`);\n      });\n      userIDs.map(id => {\n        return (queryParamsUsers = queryParamsUsers + `id=${id}&`);\n      });\n\n      // url final\n      let urlFinalGames = baseUrlGames + queryParamsGame;\n      let urlFinalUsers = baseUrlUsers + queryParamsUsers;\n      // console.log(urlFinalGames);\n\n      // appel\n      let gamesNames = await api.get(urlFinalGames);\n      let getUsers = await api.get(urlFinalUsers);\n\n      let gamesNameArray = gamesNames.data.data;\n      let arrayUsers = getUsers.data.data;\n      // console.log(arrayUsers, gamesNameArray);\n\n      // création du tableau final\n      let finalArray = dataArray.map(stream => {\n        stream.gameName = \"\";\n        stream.login = \"\";\n\n        gamesNameArray.forEach(name => {\n          arrayUsers.forEach(user => {\n            if (stream.user_id === user.id && stream.game_id === name.id) {\n              stream.truePic = user.profile_image_url;\n              stream.gameName = name.name;\n              stream.login = user.login;\n            }\n          });\n        });\n        let newUrl = stream.thumbnail_url\n          .replace(\"{width}\", \"320\")\n          .replace(\"{height}\", \"180\");\n        return stream;\n      });\n\n      setChannels(finalArray.slice(0, 6));\n    };\n\n    fetchData();\n  }, []);\n\n  return <h1>Je suis top stream</h1>;\n}\n\nexport default TopStream;\n"]},"metadata":{},"sourceType":"module"}